name: Deploy FastFoodSoatLambdaCredential Auth

on:
  workflow_call:
    inputs:
      environment:
        required: false
        type: string
    secrets:
      aws-assume-role-arn:
        required: true
      aws-region:
        required: true
      aws-lambda-s3-bucket:
        required: true
      aws-statefile-s3-bucket:
        required: true
      aws-lock-dynamodb-table:
        required: true
      jwt-secret:
        required: true
      db-username:
        required: true
      db-password:
        required: true
      db-host:
        required: false
      db-name:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew :auth-service:clean :auth-service:buildZip

      - name: Upload Lambda Artifact
        uses: actions/upload-artifact@v4
        with:
          name: auth-service-zip
          path: auth-service/build/distributions/auth-service.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Lambda Artifact
        uses: actions/download-artifact@v4
        with:
          name: auth-service-zip
          path: auth-service/terraform/

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.3

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.aws-assume-role-arn }}
          aws-region: ${{ secrets.aws-region }}

      - name: Terraform Init
        working-directory: ./auth-service/terraform
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.aws-statefile-s3-bucket }}" \
            -backend-config="key=${{ github.event.repository.name }}-auth-service" \
            -backend-config="region=${{ secrets.aws-region }}" \
            -backend-config="dynamodb_table=${{ secrets.aws-lock-dynamodb-table }}" \

      - name: Terraform Format Check
        if: github.event_name == 'pull_request'
        working-directory: ./auth-service/terraform
        run: terraform fmt -check -recursive

      - name: Terraform Auto Format
        if: github.ref == 'refs/heads/main'
        working-directory: ./auth-service/terraform
        run: terraform fmt -recursive

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        working-directory: ./auth-service/terraform
        run: terraform plan -input=false

      - name: Terraform Apply
        working-directory: ./auth-service/terraform
        run: |
          terraform apply -auto-approve \
            -var="jwt_secret=${{ secrets.jwt-secret }}" \
            -var="db_username=${{ secrets.db-username }}" \
            -var="db_password=${{ secrets.db-password }}" \
            -var="db_host=${{ secrets.db-host }}" \
            -var="db_name=${{ secrets.db-name }}"