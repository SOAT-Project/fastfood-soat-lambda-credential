name: Deploy FastFoodSoatLambdaCredential Auth

on:
  push:
    branches: [ main ]
    paths:
      - "auth-service/**"
      - "common/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew :auth-service:clean :auth-service:build shadowJar

      - name: Package Lambda
        run: zip -j auth-service.zip auth-service/build/libs/*-all.jar

      - name: Upload to S3
        run: aws s3 cp auth-service.zip ${{ secrets.S3_BUCKET_PATH }}/auth-service.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Terraform Init
        working-directory: ./auth-service/terraform
        run: terraform init

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -input=false

      - name: Terraform Apply
        id: apply
        working-directory: ./auth-service/terraform
        run: terraform apply -auto-approve \
          -var="jwt_secret=${{ secrets.JWT_SECRET }}" \
          -var="db_user=${{ secrets.DB_USER }}" \
          -var="db_password=${{ secrets.DB_PASSWORD }}" \
          -var="db_host=${{ secrets.DB_HOST }}" \
          -var="db_name=${{ secrets.DB_NAME }}"

  notify:
    if: always()
    needs: [build, deploy]
    uses: ./.github/workflows/job-notify-build.yaml
    with:
      build_status: ${{ needs.deploy.result }}
    secrets:
      DISCORD_BUILD_WEBHOOK: ${{ secrets.DISCORD_BUILD_WEBHOOK }}
