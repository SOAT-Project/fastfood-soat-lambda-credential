name: Workflow Main Merge

on:
  push:
    branches: [ main, release ]

permissions:
  id-token: write
  contents: read

jobs:

  deploy-middleware:
    name: Deploy Authorization Middleware
    uses: ./.github/workflows/job-deploy-middleware.yaml
    secrets:
      aws-assume-role-arn: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      aws-region: ${{ secrets.AWS_REGION }}
      aws-lambda-s3-bucket: ${{ secrets.AWS_LAMBDA_S3_BUCKET }}
      aws-statefile-s3-bucket: ${{ secrets.AWS_STATEFILE_S3_BUCKET }}
      jwt-secret: ${{ secrets.JWT_SECRET }}

  deploy-auth:
    name: Deploy Auth Service
    uses: ./.github/workflows/job-deploy-auth.yaml
    secrets:
      aws-assume-role-arn: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      aws-region: ${{ secrets.AWS_REGION }}
      aws-lambda-s3-bucket: ${{ secrets.AWS_LAMBDA_S3_BUCKET }}
      aws-statefile-s3-bucket: ${{ secrets.AWS_STATEFILE_S3_BUCKET }}
      jwt-secret: ${{ secrets.JWT_SECRET }}
      db-username: ${{ secrets.DB_USERNAME }}
      db-password: ${{ secrets.DB_PASSWORD }}
      db-host: ${{ secrets.DB_HOST }}
      db-name: ${{ secrets.DB_NAME }}

  notify:
    name: Notify
    needs: [deploy-middleware]
    if: ${{ always() }}
    uses: ./.github/workflows/job-notify-build.yaml
    with:
      build_status: ${{ needs.deploy-middleware.result && needs.deploy-auth.result == 'success' && 'success' || 'failure' }}
    secrets:
      DISCORD_BUILD_WEBHOOK: ${{ secrets.DISCORD_BUILD_WEBHOOK }}